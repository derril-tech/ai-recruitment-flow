[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "recruitment-flow-api"
version = "1.0.0"
description = "FastAPI backend for Recruitment Flow AI - Intelligent Hiring Orchestration"
authors = [
    {name = "Recruitment Flow AI Team", email = "team@recruitment-flow.ai"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # FastAPI and web framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    
    # Database and ORM
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "pgvector>=0.2.4",
    
    # Redis and caching
    "redis>=5.0.1",
    "aioredis>=2.0.1",
    
    # AI and ML
    "openai>=1.3.7",
    "anthropic>=0.7.7",
    "langchain>=0.0.340",
    "langchain-openai>=0.0.2",
    "langchain-anthropic>=0.0.1",
    "langgraph>=0.0.20",
    "crewai>=0.11.0",
    "chromadb>=0.4.18",
    "sentence-transformers>=2.2.2",
    
    # Data processing
    "pandas>=2.1.3",
    "numpy>=1.25.2",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # File handling and parsing
    "python-magic>=0.4.27",
    "PyPDF2>=3.0.1",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.2",
    "pillow>=10.1.0",
    
    # Email and notifications
    "aiosmtplib>=3.0.1",
    "jinja2>=3.1.2",
    
    # Calendar integrations
    "google-auth>=2.23.4",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
    "google-api-python-client>=2.108.0",
    "msal>=1.24.1",
    
    # Monitoring and observability
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
    "prometheus-client>=0.19.0",
    
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    
    # Development tools
    "black>=23.11.0",
    "isort>=5.12.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/recruitment-flow/recruitment-flow-ai"
Documentation = "https://docs.recruitment-flow.ai"
Repository = "https://github.com/recruitment-flow/recruitment-flow-ai"
Issues = "https://github.com/recruitment-flow/recruitment-flow-ai/issues"

[project.scripts]
recruitment-flow-api = "recruitment_flow_api.main:app"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["recruitment_flow_api"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "aioredis.*",
    "pgvector.*",
    "langchain.*",
    "langgraph.*",
    "crewai.*",
    "chromadb.*",
    "sentence_transformers.*",
    "google.*",
    "msal.*",
    "opentelemetry.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=recruitment_flow_api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
