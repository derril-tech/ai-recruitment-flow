name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Frontend CI
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './apps/web/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Build
        run: npm run build

  # Backend CI
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Lint with Ruff
        run: ruff check .

      - name: Format check with Black
        run: black --check .

      - name: Type check with mypy
        run: mypy recruitment_flow_api

      - name: Run tests
        run: pytest

  # Packages CI
  packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ui, workflows, agents, retrievers, parsers, lib]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './packages/${{ matrix.package }}/package-lock.json'

      - name: Install dependencies
        run: |
          cd packages/${{ matrix.package }}
          npm ci

      - name: Lint
        run: |
          cd packages/${{ matrix.package }}
          npm run lint

      - name: Run tests
        run: |
          cd packages/${{ matrix.package }}
          npm run test

      - name: Build
        run: |
          cd packages/${{ matrix.package }}
          npm run build

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # E2E Tests
  e2e:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './apps/web/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Run E2E tests
        run: |
          cd apps/web
          npm run test:e2e
